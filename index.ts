// Capture environment as module variable to allow testing.
const getCompileTimeEnv = () => {
  try {
    const currentEnv = process.env;

    return currentEnv;
  } catch (error) {
    console.info(
      "`process.env` is not defined. Compile-time environment will be empty."
    );

    return {}
  }
  }

let compileTimeEnv = getCompileTimeEnv();

console.info("The env??", compileTimeEnv);

// This template tag should be rendered/replaced with the environment in production.
// Padded to 4KB so that the data can be inserted without offsetting character
// indexes of the bundle (avoids breaking source maps).
const runtimeEnv =
  "{{}}";

// A function returning the runtime environment, so that
// JSON parsing & errors occur at runtime instead of load time.
const loadRuntimeEnv = () => {
  if (compileTimeEnv.NODE_ENV === "development" /* "production" */) {
    try {
      const parsedEnv = JSON.parse(runtimeEnv);
  
      return parsedEnv;
    } catch (error) {
      var overflowsMessage = runtimeEnv.slice(32, 33) != null;
      console.error(
        "Runtime env vars cannot be parsed. " +
          "Content is `" +
          runtimeEnv.slice(0, 31) +
          (overflowsMessage ? "â€¦" : "") +
          "`"
      );
    }
    return {};
  }
  
  return compileTimeEnv;
}

export default loadRuntimeEnv;
